{"version":3,"sources":["newsApi.tsx","Article.tsx","Articles.tsx","ErrorBoundary.tsx","App.tsx","index.tsx"],"names":["getArticles","search","a","url","everythingUrl","axios","get","then","data","articles","catch","err","console","log","status","Article","title","urlToImage","Grid","item","className","Link","href","target","rel","Typography","align","variant","src","alt","Articles","getNews","loading","observer","useRef","isLastArticleElement","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","map","article","index","length","ref","nextId","ErrorBoundary","state","error","prevProps","prevState","this","setState","props","FallbackComponent","children","Component","App","useState","setArticles","setLoading","ratio","setRatio","LOCAL_STORAGE_KEY","useEffect","tempArticles","JSON","parse","localStorage","getItem","setItem","stringify","generateSearch","negativeWords","positiveWords","count","fetch","negRes","text","negText","toString","split","posRes","posText","Math","random","floor","Array","from","Set","forEach","find","onSliderChangeCommitted","muiTheme","createMuiTheme","overrides","MuiSlider","thumb","color","track","rail","container","spacing","justify","id","ThemeProvider","theme","Slider","defaultValue","min","max","value","onChange","_e","newValue","onChangeCommitted","aria-labelledby","role","message","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a52d117d.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseUrl = \"https://newsapi.org/v2/\";\r\nconst everythingUrl = baseUrl + \"everything/\";\r\n\r\nexport const getArticles = async (search: string) => {\r\n  let url = everythingUrl + \"?language=en&pageSize=100\";\r\n  if (search !== \"\") {\r\n    url += \"&q=\" + search;\r\n  }\r\n  url += \"&apiKey=\" + process.env.REACT_APP_API_KEY;\r\n  const articles = await axios\r\n    .get(url)\r\n    .then((data) => data.data.articles)\r\n    .catch((err) => {\r\n      console.log(err);\r\n      if (err.status === 429) console.log(\"Too many requests\");\r\n      return [];\r\n    });\r\n\r\n  return articles;\r\n};\r\n","import { Grid, Link, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./Article.scss\";\r\nexport interface ArticleProps {\r\n  description?: string;\r\n  author?: string;\r\n  urlToImage?: string;\r\n  content?: string;\r\n  publishedAt?: string;\r\n  title: string;\r\n  url: string;\r\n}\r\n\r\nconst Article: React.FC<ArticleProps> = ({ url, title, urlToImage }) => {\r\n  return (\r\n    <Grid item className=\"card-container\">\r\n      <Link href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <Typography align=\"center\" variant=\"h5\">\r\n          {title}\r\n        </Typography>\r\n      </Link>\r\n      {urlToImage && (\r\n        <img src={urlToImage} alt=\"\" className=\"image-container\" />\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Article;\r\n","import React, { useCallback, useRef } from \"react\";\r\nimport Article from \"./Article\";\r\nimport type { ArticleProps } from \"./Article\";\r\nimport nextId from \"react-id-generator\";\r\nimport { Grid } from \"@material-ui/core\";\r\nexport interface ArticlesProps {\r\n  articles: ArticleProps[];\r\n  getNews: () => {};\r\n  loading: boolean;\r\n}\r\n\r\nconst Articles: React.FC<ArticlesProps> = ({ articles, getNews, loading }) => {\r\n  const observer = useRef<IntersectionObserver>();\r\n  const isLastArticleElement = useCallback(\r\n    (node) => {\r\n      if (observer.current) observer.current.disconnect();\r\n      observer.current = new IntersectionObserver(async (entries) => {\r\n        if (entries[0].isIntersecting && !loading) getNews();\r\n      });\r\n      if (node) observer.current.observe(node);\r\n    },\r\n    [getNews, loading]\r\n  );\r\n  return (\r\n    <ul>\r\n      {articles.map((article, index) => {\r\n        if (articles.length === index + 1) {\r\n          return (\r\n            <Grid item key={nextId()} ref={isLastArticleElement}>\r\n              <Article\r\n                url={article.url}\r\n                title={article.title}\r\n                urlToImage={article.urlToImage}\r\n              ></Article>\r\n            </Grid>\r\n          );\r\n        } else {\r\n          return (\r\n            <Grid item key={nextId()}>\r\n              <Article\r\n                url={article.url}\r\n                title={article.title}\r\n                urlToImage={article.urlToImage}\r\n              ></Article>\r\n            </Grid>\r\n          );\r\n        }\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Articles;\r\n","import React, { Component } from \"react\";\r\n\r\ninterface ErrorBoundaryProps {\r\n  FallbackComponent: Function;\r\n}\r\n\r\ninterface ErrorBoundaryState {\r\n  error: Error | null;\r\n}\r\n\r\nexport default class ErrorBoundary extends Component<\r\n  ErrorBoundaryProps,\r\n  ErrorBoundaryState\r\n> {\r\n  state = { error: null };\r\n  static getDerivedStateFromError(error: Error) {\r\n    return { error };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.error && prevState.error === this.state.error)\r\n      this.setState({ error: null });\r\n  }\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n    if (error) {\r\n      return <this.props.FallbackComponent {...error} />;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n","import React, { /*useRef,*/ useState, useEffect } from \"react\";\r\nimport { getArticles } from \"./newsApi\";\r\nimport type { ArticleProps } from \"./Article\";\r\nimport Articles from \"./Articles\";\r\nimport ErrorBoundary from \"./ErrorBoundary\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { createMuiTheme, Theme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { ChangeEvent } from \"react\";\r\n\r\nfunction App() {\r\n  const [articles, setArticles] = useState<ArticleProps[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  /*const searchRef = useRef<HTMLInputElement>(null);\r\n   */\r\n  const [ratio, setRatio] = useState<number>(50);\r\n  const LOCAL_STORAGE_KEY = \"articles\";\r\n\r\n  useEffect(() => {\r\n    const tempArticles = JSON.parse(\r\n      localStorage.getItem(LOCAL_STORAGE_KEY) || \"\"\r\n    );\r\n    setArticles(tempArticles);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(articles));\r\n  }, [articles]);\r\n\r\n  const generateSearch = async (ratio: number) => {\r\n    let negativeWords = [\"\"];\r\n    let positiveWords = [\"\"];\r\n    let search = \"\";\r\n    let count = 0;\r\n\r\n    const negRes = await fetch(\"negative-words.txt\");\r\n    const negText = await negRes.text();\r\n    negativeWords = negText.toString().split(\"\\n\");\r\n\r\n    const posRes = await fetch(\"positive-words.txt\");\r\n    const posText = await posRes.text();\r\n    positiveWords = posText.toString().split(\"\\n\");\r\n\r\n    // Two words is a good trade-off between amount of articles and good/bad accuracy\r\n    while (count < 2) {\r\n      if (Math.random() * 100 < ratio) {\r\n        if (positiveWords.length) {\r\n          search +=\r\n            positiveWords[\r\n              Math.floor(Math.random() * positiveWords.length - 1)\r\n            ] + \" \";\r\n        }\r\n      } else {\r\n        if (negativeWords.length) {\r\n          search +=\r\n            negativeWords[\r\n              Math.floor(Math.random() * negativeWords.length - 1)\r\n            ] + \" \";\r\n        }\r\n      }\r\n      count += 1;\r\n    }\r\n    return search;\r\n  };\r\n  const getNews = async () => {\r\n    setLoading(true);\r\n    /*if (searchRef && searchRef.current) {\r\n      let search = searchRef.current.value.toString() || \"\";*/\r\n    if (ratio) {\r\n      /*if (search === \"\") {*/\r\n      const search = await generateSearch(ratio);\r\n      /*}*/\r\n      const data: ArticleProps[] = await getArticles(search);\r\n      if (data.length === 0) {\r\n        getNews();\r\n        return;\r\n      }\r\n      // Remove duplicate articles with the same title\r\n      Array.from(new Set<string>(data.map((article) => article.title))).forEach(\r\n        (title) => {\r\n          const article: ArticleProps | undefined = data.find((article) => {\r\n            return article.title === title;\r\n          });\r\n          if (article) setArticles([...articles, article]);\r\n        }\r\n      );\r\n    }\r\n    setLoading(false);\r\n    return;\r\n  };\r\n\r\n  const ErrorFallback = ({ error }: { error: Error }) => {\r\n    return (\r\n      <div role=\"alert\">\r\n        <p>Something went wrong:</p>\r\n        <pre>{error.message}</pre>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const onSliderChange = (_e: ChangeEvent<{}>, newValue: number | number[]) => {\r\n    if (typeof newValue === \"number\") setRatio(newValue);\r\n    setArticles([]);\r\n  };\r\n\r\n  const onSliderChangeCommitted = async () => {\r\n    getNews();\r\n  };\r\n\r\n  // const marks: { value: number; label: string }[] = [\r\n  //   { value: 0, label: \"0:1\" },\r\n  //   { value: 25, label: \"1:3\" },\r\n  //   { value: 50, label: \"1:1\" },\r\n  //   { value: 75, label: \"3:1\" },\r\n  //   { value: 99, label: \"1:0\" },\r\n  // ];\r\n\r\n  const muiTheme: Theme = createMuiTheme({\r\n    overrides: {\r\n      MuiSlider: {\r\n        thumb: {\r\n          color: \"yellow\",\r\n        },\r\n        track: {\r\n          color: \"green\",\r\n        },\r\n        rail: {\r\n          color: \"red\",\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\".app\">\r\n      <Grid container spacing={2} justify=\"center\">\r\n        <Grid item>\r\n          <Typography id=\"ratio-slider\" align=\"center\" variant=\"h5\">\r\n            Slide to adjust ratio of positive vs negative news\r\n          </Typography>\r\n          <ThemeProvider theme={muiTheme}>\r\n            <Slider\r\n              defaultValue={50}\r\n              // marks={marks}\r\n              min={1}\r\n              max={99}\r\n              value={ratio}\r\n              onChange={onSliderChange}\r\n              onChangeCommitted={onSliderChangeCommitted}\r\n              aria-labelledby=\"ratio-slider\"\r\n            />\r\n          </ThemeProvider>\r\n          {/* <input type=\"text\" ref={searchRef} placeholder=\"Regular search\" /> */}\r\n        </Grid>\r\n        <Grid container justify=\"center\">\r\n          <ErrorBoundary FallbackComponent={ErrorFallback}>\r\n            {articles ? (\r\n              <Articles\r\n                articles={articles}\r\n                getNews={getNews}\r\n                loading={loading}\r\n              ></Articles>\r\n            ) : null}\r\n          </ErrorBoundary>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();"],"sourceRoot":""}